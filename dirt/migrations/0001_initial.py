# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-03-27 22:15
from __future__ import unicode_literals

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='All_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('length', models.DecimalField(blank=True, db_column='length', decimal_places=2, max_digits=7, null=True)),
                ('quantity', models.DecimalField(blank=True, db_column='quantity', decimal_places=2, max_digits=7, null=True)),
            ],
            options={
                'db_table': 'all_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Beaches',
            fields=[
                ('location', models.CharField(blank=True, db_column='location', max_length=100, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(blank=True, db_column='latitude', decimal_places=8, max_digits=11, null=True)),
                ('longitude', models.DecimalField(blank=True, db_column='longitude', decimal_places=8, max_digits=11, null=True)),
                ('city', models.CharField(blank=True, db_column='city', max_length=100, null=True)),
                ('post', models.CharField(blank=True, db_column='post', max_length=12, null=True)),
                ('water', models.CharField(blank=True, choices=[('r', 'river'), ('l', 'lake')], db_column='water', max_length=12, null=True)),
            ],
            options={
                'db_table': 'beaches',
                'ordering': ['location'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Codes',
            fields=[
                ('code', models.CharField(blank=True, db_column='code', max_length=5, primary_key=True, serialize=False)),
                ('material', models.CharField(blank=True, db_column='material', max_length=30, null=True)),
                ('description', models.CharField(blank=True, db_column='description', max_length=30, null=True)),
                ('source', models.CharField(blank=True, db_column='source', max_length=30, null=True)),
            ],
            options={
                'db_table': 'codes',
                'ordering': ['material'],
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('entry', models.CharField(choices=[('ex', 'expense'), ('re', 'revenue')], db_column='type', max_length=30)),
                ('origin', models.CharField(choices=[('t', 'Transportation'), ('m', 'Meals'), ('s', 'Software'), ('n', 'Network'), ('t', 'Telephone'), ('p', 'Personal equipment'), ('e', 'Equipment'), ('i', 'IT equipment'), ('o', 'Operations'), ('d', 'Donation'), ('s-g', 'Services group activity'), ('s-c', 'Services beach clean'), ('s-s', 'Services IT'), ('l', 'labor')], db_column='source', max_length=30)),
                ('amount', models.DecimalField(blank=True, db_column='amount', decimal_places=2, max_digits=10, null=True)),
                ('project', models.CharField(blank=True, db_column='project', max_length=30)),
            ],
            options={
                'db_table': 'finance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='References',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_column='title', max_length=240, null=True)),
                ('author', models.CharField(blank=True, db_column='author', max_length=120, null=True)),
                ('abstract', models.CharField(blank=True, db_column='abstract', max_length=300, null=True)),
                ('subject', models.CharField(choices=[('env', 'Environment - general'), ('env-h', 'Hydrology'), ('env-j', 'Environment - justice'), ('wat-q', 'Water quality'), ('bio', 'Biology - general'), ('chem', 'Chemistry'), ('m-bio', 'Microbiology'), ('b-l', 'Beach-litter'), ('econ', 'Economics'), ('cit', 'Citizen science'), ('gv', 'Government - reg'), ('mt', 'Math - general'), ('ma', 'Math - Analysis'), ('mp', 'Math - probability'), ('pp', 'Programing - python'), ('pd', 'Data science'), ('po', 'Programing - other'), ('gc', 'General culture')], db_column='subject', max_length=30)),
            ],
            options={
                'db_table': 'library',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SLR_Beaches',
            fields=[
                ('location', models.CharField(blank=True, db_column='Location', max_length=100, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(blank=True, db_column='latitude', decimal_places=8, max_digits=11, null=True)),
                ('longitude', models.DecimalField(blank=True, db_column='longitude', decimal_places=8, max_digits=11, null=True)),
                ('city', models.CharField(blank=True, db_column='city', max_length=100, null=True)),
                ('post', models.CharField(blank=True, db_column='post', max_length=12, null=True)),
                ('water', models.CharField(blank=True, choices=[('r', 'river'), ('l', 'lake')], db_column='water', max_length=12, null=True)),
            ],
            options={
                'db_table': 'slr_beaches',
                'ordering': ['location'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SLR_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('length', models.DecimalField(blank=True, db_column='length', decimal_places=2, max_digits=7, null=True)),
                ('quantity', models.DecimalField(blank=True, db_column='quantity', decimal_places=2, max_digits=7, null=True)),
                ('density', models.DecimalField(blank=True, db_column='density', decimal_places=3, max_digits=8)),
            ],
            options={
                'db_table': 'slr_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SLR_Density',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, db_column='date', null=True)),
                ('sample', models.IntegerField(blank=True, db_column='sample', null=True)),
                ('density', models.DecimalField(blank=True, db_column='density', decimal_places=3, max_digits=8)),
                ('quantity', models.IntegerField(blank=True, db_column='quantity', null=True)),
            ],
            options={
                'db_table': 'slr_dens_date',
                'managed': False,
            },
        ),
    ]
